async def edit_product_message(bot, product_id, new_text, msg_id):
    from my_utils.database import read_json
    from markups import create_product_markup
    from my_utils.data_loaders import config_data
    # –ß—Ç–µ–Ω–∏–µ JSON
    events = read_json(config_data["events"])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–¥—É–∫—Ç
    if events and product_id in events:
        product_data = events[product_id]
        
        # –ü–æ–ª—É—á–∞–µ–º chat_id –∏ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—ã–π message_id
        chat_id = int(product_data.get("chat_id"))
        message_id = msg_id

        
        if not chat_id or not message_id:
            raise ValueError(f"–î–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ {product_id} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç chat_id –∏–ª–∏ message_id")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            old_text = (
                "üì¶ ***–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç!***\n\n"
                f'üìä **–í–µ—Å –ø—Ä–æ–¥—É–∫—Ç–∞:** {product_data["weight"]} –≥\n'
                "‚ùì –ö—Ç–æ-—Ç–æ –ø–æ–ª–æ–∂–∏–ª —ç—Ç–æ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫, –Ω–æ –º—ã –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ–º, —á—Ç–æ —ç—Ç–æ.\n\n"
                "üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç.")
            
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            await bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=f"{old_text}\n\n{new_text}",
                reply_markup=create_product_markup(product_id),
                parse_mode="Markdown"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        print(f"–ü—Ä–æ–¥—É–∫—Ç —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ events")
