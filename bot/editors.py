import os


async def edit_product_message(bot, product_id, new_text):
    from database import read_json, load_storage_tmp
    from markups import create_product_markup
    from data_loaders import config_data
    import traceback

    print(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å ID: {product_id}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    s = load_storage_tmp()
    if not s:
        print("–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –ø—É—Å—Ç–æ–µ!")
        return

    # –ß–∏—Ç–∞–µ–º —Å–æ–±—ã—Ç–∏—è
    e = read_json(config_data['events'])
    if str(product_id) not in e:
        print(f"–ü—Ä–æ–¥—É–∫—Ç —Å ID {product_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ 'events'")
        return

    pd = e[str(product_id)]
    print(f"–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∞: {pd}")

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    user_data = read_json(config_data['users'])
    user_ids = [int(user_id) for user_id in user_data.keys()]

    # –ò—Å–∫–ª—é—á–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    user_ids = [user_id for user_id in user_ids if user_id != int(os.getenv("ADMIN_ID"))]
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {user_ids}")

    if not user_ids:
        print(f"–î–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ {product_id} –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ chat_id")
        return

    old_text = (
        "üì¶ ***–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç!***\n\n"
        f'üìä **–í–µ—Å –ø—Ä–æ–¥—É–∫—Ç–∞:** {pd["weight"]} –≥\n'
        "‚ùì –ö—Ç–æ-—Ç–æ –ø–æ–ª–æ–∂–∏–ª —ç—Ç–æ –≤ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫, –Ω–æ –º—ã –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞–µ–º, —á—Ç–æ —ç—Ç–æ.\n\n"
        "üëá –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç."
    )

    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for u in user_ids:
        try:
            if str(u) not in s or "message_id" not in s[str(u)]:
                print(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö message_id –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {u}")
                continue

            message_id = s[str(u)]['message_id']
            print(f"–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è chat_id={u}, message_id={message_id}")

            await bot.edit_message_text(
                chat_id=u,
                message_id=message_id,
                text=f"{old_text}\n\n{new_text}",
                reply_markup=create_product_markup(product_id),
                parse_mode="Markdown"
            )
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è chat_id={u} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
        except Exception as e:
            traceback.print_exc()
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è chat_id={u}: {e}")
